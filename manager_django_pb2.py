# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: manager_django.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='manager_django.proto',
  package='consultation',
  syntax='proto2',
  serialized_pb=_b('\n\x14manager_django.proto\x12\x0c\x63onsultation\"D\n\x0bSaveRequest\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x14\n\x0c\x66ile_content\x18\x02 \x01(\x0c\x12\x11\n\ttimestamp\x18\x03 \x01(\x05\"\"\n\x0cSaveResponse\x12\x12\n\nreply_path\x18\x01 \x01(\t2N\n\x07Manager\x12\x43\n\x08SaveFile\x12\x19.consultation.SaveRequest\x1a\x1a.consultation.SaveResponse\"\x00')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SAVEREQUEST = _descriptor.Descriptor(
  name='SaveRequest',
  full_name='consultation.SaveRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='consultation.SaveRequest.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='file_content', full_name='consultation.SaveRequest.file_content', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='consultation.SaveRequest.timestamp', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=106,
)


_SAVERESPONSE = _descriptor.Descriptor(
  name='SaveResponse',
  full_name='consultation.SaveResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reply_path', full_name='consultation.SaveResponse.reply_path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=108,
  serialized_end=142,
)

DESCRIPTOR.message_types_by_name['SaveRequest'] = _SAVEREQUEST
DESCRIPTOR.message_types_by_name['SaveResponse'] = _SAVERESPONSE

SaveRequest = _reflection.GeneratedProtocolMessageType('SaveRequest', (_message.Message,), dict(
  DESCRIPTOR = _SAVEREQUEST,
  __module__ = 'manager_django_pb2'
  # @@protoc_insertion_point(class_scope:consultation.SaveRequest)
  ))
_sym_db.RegisterMessage(SaveRequest)

SaveResponse = _reflection.GeneratedProtocolMessageType('SaveResponse', (_message.Message,), dict(
  DESCRIPTOR = _SAVERESPONSE,
  __module__ = 'manager_django_pb2'
  # @@protoc_insertion_point(class_scope:consultation.SaveResponse)
  ))
_sym_db.RegisterMessage(SaveResponse)


import abc
from grpc.beta import implementations as beta_implementations
from grpc.early_adopter import implementations as early_adopter_implementations
from grpc.framework.alpha import utilities as alpha_utilities
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
class EarlyAdopterManagerServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def SaveFile(self, request, context):
    raise NotImplementedError()
class EarlyAdopterManagerServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterManagerStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def SaveFile(self, request):
    raise NotImplementedError()
  SaveFile.async = None
def early_adopter_create_Manager_server(servicer, port, private_key=None, certificate_chain=None):
  import manager_django_pb2
  import manager_django_pb2
  method_service_descriptions = {
    "SaveFile": alpha_utilities.unary_unary_service_description(
      servicer.SaveFile,
      manager_django_pb2.SaveRequest.FromString,
      manager_django_pb2.SaveResponse.SerializeToString,
    ),
  }
  return early_adopter_implementations.server("consultation.Manager", method_service_descriptions, port, private_key=private_key, certificate_chain=certificate_chain)
def early_adopter_create_Manager_stub(host, port, metadata_transformer=None, secure=False, root_certificates=None, private_key=None, certificate_chain=None, server_host_override=None):
  import manager_django_pb2
  import manager_django_pb2
  method_invocation_descriptions = {
    "SaveFile": alpha_utilities.unary_unary_invocation_description(
      manager_django_pb2.SaveRequest.SerializeToString,
      manager_django_pb2.SaveResponse.FromString,
    ),
  }
  return early_adopter_implementations.stub("consultation.Manager", method_invocation_descriptions, host, port, metadata_transformer=metadata_transformer, secure=secure, root_certificates=root_certificates, private_key=private_key, certificate_chain=certificate_chain, server_host_override=server_host_override)

class BetaManagerServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def SaveFile(self, request, context):
    raise NotImplementedError()

class BetaManagerStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def SaveFile(self, request, timeout):
    raise NotImplementedError()
  SaveFile.future = None

def beta_create_Manager_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import manager_django_pb2
  import manager_django_pb2
  request_deserializers = {
    ('consultation.Manager', 'SaveFile'): manager_django_pb2.SaveRequest.FromString,
  }
  response_serializers = {
    ('consultation.Manager', 'SaveFile'): manager_django_pb2.SaveResponse.SerializeToString,
  }
  method_implementations = {
    ('consultation.Manager', 'SaveFile'): face_utilities.unary_unary_inline(servicer.SaveFile),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_Manager_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import manager_django_pb2
  import manager_django_pb2
  request_serializers = {
    ('consultation.Manager', 'SaveFile'): manager_django_pb2.SaveRequest.SerializeToString,
  }
  response_deserializers = {
    ('consultation.Manager', 'SaveFile'): manager_django_pb2.SaveResponse.FromString,
  }
  cardinalities = {
    'SaveFile': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'consultation.Manager', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
